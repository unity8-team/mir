/*
 * Copyright Â© 2008 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Author:
 *    Zou Nan hai <nanhai.zou@intel.com>
 */ 
/* media_read with workaround for not 4 byte aligned x
 * should fix this for machine without such errata
 */
and (1) g2.24<1>UD g2.0<1,1,1>UD 0x3UD {align1};
send (16) 0 g12.0<1>UW g2<8,8,1>UW read(input_surface, 2, 0, 2) mlen 1 rlen 4 {align1};
mul(1) g2.24<1>UD g2.24<1,1,1>UD 0x5UD {align1};
jmpi g2.24<1,1,1>D;

mov (16) reg1.0<1>UB g12.0<16,8,1>UB {align1};
mov (16) reg1.16<1>UB g13.0<16,8,1>UB {align1};
mov (16) reg2.0<1>UB g14.0<16,8,1>UB {align1};
mov (16) reg2.16<1>UB g15.0<16,8,1>UB {align1};
jmpi out;

mov (16) reg1.0<1>UB g12.1<16,8,1>UB {align1};
mov (16) reg1.16<1>UB g13.1<16,8,1>UB {align1};
mov (16) reg2.0<1>UB g14.1<16,8,1>UB {align1};
mov (16) reg2.16<1>UB g15.1<16,8,1>UB {align1};
jmpi out;

mov (16) reg1.0<1>UB g12.2<16,8,1>UB {align1};
mov (16) reg1.16<1>UB g13.2<16,8,1>UB {align1};
mov (16) reg2.0<1>UB g14.2<16,8,1>UB {align1};
mov (16) reg2.16<1>UB g15.2<16,8,1>UB {align1};
jmpi out;

mov (16) reg1.0<1>UB g12.3<16,8,1>UB {align1};
mov (16) reg1.16<1>UB g13.3<16,8,1>UB {align1};
mov (16) reg2.0<1>UB g14.3<16,8,1>UB {align1};
mov (16) reg2.16<1>UB g15.3<16,8,1>UB {align1};
out:
