/*
 * Copyright Â© 2008 Intel Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice (including the next
 * paragraph) shall be included in all copies or substantial portions of the
 * Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 * Author:
 *    Zou Nan hai <nanhai.zou@intel.com>
 */  
 
/* if (motion_vect.x & 1) {
 *   if (motion_vect.y & 1)
 *	 half_pixel in x and y;
 *   else
 *	 half_pixel in x;
 * } else {
 *	if (motion_vect.y & 1) 
 *	  half_pixel y;
 *	else
 *	  full_pixel_read;	
 * }	 
 */

/* if ((mv[0]&1) == 1) { */
	and.z (1) null mv1<1,1,1>UD 1UD {align1};	
	(f0) jmpi L1;
	/* if ((mv[1] & 1 == 1) { */
	and.z (1) null mv2<1,1,1>UD 1UD {align1};	
	(f0) jmpi L2;
	/* 10x16 media read */
	mov (1) g2.8<1>UD 0x009000fUD  {align1}; 
	include(`media_read_avg_x1y1.g4i')
	jmpi L3;
	/* } else { */
L2:
	/* 8x16 media read */
	mov (1) g2.8<1>UD 0x007000fUD  {align1};
	include(`media_read_avg_x1y0.g4i')
	/* } */
L3:
	jmpi L5;
/* } else {*/
L1:
       	/* if (mv[1] & 1 == 1) { */
	and.z (1) null mv1<1,1,1>UD 0UD {align1};	
	/* jump to L4 */
	(f0) jmpi L4;
	/* 10x16 media read */
	mov (1) g2.8<1>UD 0x009000fUD  {align1};
	include(`media_read_avg_x0y1.g4i')
      	/* } else { */ 
L4:
	/* 8x16 media read */
	mov (1) g2.8<1>UD 0x007000fUD  {align1};
	include(`media_read.g4i')
/* } */
L5:
mov (1) g2.8<1>UD 0x0070007UD  {align1};
