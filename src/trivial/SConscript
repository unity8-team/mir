Import('*')

progs = [
	'clear-color',
	'clear-fbo-scissor',
	'clear-fbo-tex',
	'clear-fbo',
	'clear-random',
	'clear-repeat',
	'clear-scissor',
	'clear-undefined',
	'createwin',
	'dlist-begin-call-end',
	'dlist-dangling',
	'dlist-degenerate',
	'dlist-edgeflag-dangling',
	'dlist-edgeflag',
	'dlist-flat-tri',
	'dlist-mat-tri',
	'dlist-recursive-call',
	'dlist-tri-flat-tri',
	'dlist-tri-mat-tri',
	'draw2arrays',
	'drawarrays',
	'drawelements-large',
	'drawelements',
	'drawrange',
	'flat-clip',
	'fs-tri',
	'line-clip',
	'line-cull',
	'line-flat',
	'line-smooth',
	'line-stipple-wide',
	'line-userclip-clip',
	'line-userclip-nop-clip',
	'line-userclip-nop',
	'line-userclip',
	'line-wide',
	'line-xor',
	'line',
	'lineloop-clip',
	'lineloop-elts',
	'lineloop',
	'linestrip-flat-stipple',
	'linestrip-stipple-wide',
	'linestrip-stipple',
	'linestrip',
	'long-fixed-func',
	'pgon-mode',
	'point-clip',
	'point-param',
	'point-sprite',
	'point-wide',
	'point-wide-smooth',
	'point',
	'poly-flat',
	'poly-flat-clip',
	'poly-flat-unfilled-clip',
	'poly-unfilled',
	'poly',
	'quad-clip-all-vertices',
	'quad-clip-nearplane',
	'quad-clip',
	'quad-degenerate',
	'quad-flat',
	'quad-offset-factor',
	'quad-offset-unfilled',
	'quad-offset-units',
	'quad-tex-2d',
	'quad-tex-3d',
	'quad-tex-alpha',
	'quad-tex-pbo',
	'quad-tex-sub',
	'quad-unfilled-clip',
	'quad-unfilled-stipple',
	'quad-unfilled',
	'quad',
	'quads',
	'quadstrip-clip',
	'quadstrip-cont',
	'quadstrip-flat',
	'quadstrip',
	'sub-tex',
	'tex-quads',
	'tri-alpha-tex',
	'tri-alpha',
	'tri-array-interleaved',
	'tri-blend-color',
	'tri-blend-max',
	'tri-blend-min',
	'tri-blend-revsub',
	'tri-blend-sub',
	'tri-blend',
	'tri-clip',
	'tri-clear',
	'tri-cull-both',
	'tri-cull',
	'tri-dlist',
	'tri-edgeflag-array',
	'tri-edgeflag',
	'tri-fbo-tex-mip',
	'tri-fbo-tex',
	'tri-fbo',
	'tri-flat-clip',
	'tri-flat',
	'tri-fog',
	'tri-fp-const-imm',
	'tri-fp',
	'tri-lit-material',
	'tri-lit',
	'tri-logicop-none',
	'tri-logicop-xor',
	'tri-mask-tri',
	'tri-multitex-vbo',
	'tri-orig',
	'tri-point-line-clipped',
	'tri-query',
	'tri-repeat',
	'tri-scissor-tri',
	'tri-square',
	'tri-stencil',
	'tri-stipple',
	'tri-tex-1d',
	'tri-tex-3d',
	'tri-tex',
	'tri-tri',
	'tri-unfilled-clip',
	'tri-unfilled-edgeflag',
	'tri-unfilled-fog',
	'tri-unfilled-point',
	'tri-unfilled-smooth',
	'tri-unfilled-tri-lit',
	'tri-unfilled-tri',
	'tri-unfilled-userclip-stip',
	'tri-unfilled-userclip',
	'tri-unfilled',
	'tri-userclip',
	'tri-viewport',
	'tri-z-9',
	'tri-z-eq',
	'tri-z',
	'tri',
	'trifan-flat-clip',
	'trifan-flat-unfilled-clip',
	'trifan-flat',
	'trifan-unfilled',
	'trifan',
	'tristrip-clip',
	'tristrip-flat',
	'tristrip',
	'vbo-drawarrays',
	'vbo-drawelements',
	'vbo-drawrange',
	'vbo-noninterleaved',
	'vbo-tri',
	'vp-array-hf',
	'vp-array-int',
	'vp-array',
	'vp-clip',
	'vp-line-clip',
	'vp-tri-cb-pos',
	'vp-tri-cb-tex',
	'vp-tri-cb',
	'vp-tri-imm',
	'vp-tri-invariant',
	'vp-tri-swap',
	'vp-tri-tex',
	'vp-tri',
	'vp-unfilled',
]

for prog in progs:
    prog = progs_env.Program(
        target = prog,
        source = prog + '.c',
    )

# auto code generation
#getprocaddress: getprocaddress.c getproclist.h

#getproclist.h: $(TOP)/src/mesa/glapi/gen/gl_API.xml getprocaddress.c getprocaddress.py
#	python getprocaddress.py > getproclist.h


#readtex.h: $(TOP)/progs/util/readtex.h
#	ln -s $(TOP)/progs/util/readtex.h .

#readtex.c: $(TOP)/progs/util/readtex.c
#	ln -s $(TOP)/progs/util/readtex.c .


#extfuncs.h:  $(TOP)/progs/util/extfuncs.h
#	cp $< .
