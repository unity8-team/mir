#!/bin/bash

ROOT="$SNAP_APP_DATA_PATH"
if [ -z "$ROOT" ]; then
    ROOT="$SNAPP_APP_DATA_PATH"
fi

COMMANDS="$ROOT/commands"
MESSAGES="$ROOT/messages"
rm -f "$COMMANDS" "$MESSAGES"
mkfifo "$COMMANDS" "$MESSAGES"
chmod go-r "$COMMANDS" "$MESSAGES"

# We use a fifo and redirect to /dev/null rather than pointing an fd at
# /dev/null directly because the asio library that USC uses doesn't like
# fd's based on files!
cat "$MESSAGES" > /dev/null &
exec 4>"$MESSAGES"

# We want our first (and only) message to be "set active session to snappy-mir"
# first two bytes are id (4 for set-active-session)
# second two are size of string
# then the string content
echo -en "\x0\x4\x0\xasnappy-mir" >"$COMMANDS" &
exec 5<"$COMMANDS"

exec unity-system-compositor --file "$ROOT/mir_socket" --vt 1 --to-dm-fd 4 --from-dm-fd 5 --spinner /usr/bin/unity-system-compositor-spinner --inactivity-display-off-timeout 0 $@
